{"version":3,"sources":["firebase.js","Auth.js","Login.js","PrivateRoute.js","api.js","EditableTextField.js","AppHeader.js","MainPage.js","DonePage.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","app","onAuthStateChanged","user","Provider","value","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","withRouter","history","classes","handleLogin","useCallback","event","a","preventDefault","target","elements","email","password","signInWithEmailAndPassword","push","alert","useContext","to","Container","component","maxWidth","CssBaseline","className","noValidate","onSubmit","TextField","variant","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","color","Typography","onClick","signInWithPopup","PrivateRoute","RouteComponent","rest","render","routeProps","getTodoForUser","userId","firestore","collection","doc","get","then","data","tasks","setTodoForUser","set","console","log","catch","error","EditableTextField","updateItemTitle","newValue","setNewValue","editMode","setEditMode","setError","errorText","setErrorText","textView","cursor","inputView","textInput","useRef","updateTitleIfValid","length","setTimeout","current","focus","defaultValue","inputRef","helperText","onKeyDown","key","onBlur","onChange","root","backgroundColor","palette","primary","title","flexGrow","profileImage","borderRadius","verticalAlign","maxHeight","marginRight","AppHeader","useHistory","anchorEl","setAnchorEl","AppBar","position","Toolbar","Fragment","IconButton","menuButton","aria-controls","aria-haspopup","currentTarget","keepMounted","open","onClose","style","padding","displayName","src","photoURL","alt","Divider","MenuItem","signOut","listStyleType","justifyContent","card","minWidth","input","marginLeft","marginBottom","flex","inputfield","MainPage","newItemTitle","setNewItemTitle","items","setItems","waitForApi","setWaitForApi","allChangesSaved","setAllChangesSaved","finally","e","newItem","uuidv4","InputBase","placeholder","onDrop","removedIndex","addedIndex","doneItems","filter","item","isDone","removedIndexInFullList","findIndex","addedIndexInFullList","arrayMove","getChildPayload","index","dragHandleSelector","lockAxis","dropPlaceholder","animationDuration","showOnTop","map","isFavorite","itemTitle","ListItem","height","ListItemIcon","selectedItem","find","toggleItemDone","updatedItemTitle","ListItemSecondaryAction","Checkbox","checked","icon","FavoriteBorder","checkedIcon","Favorite","toggleFavorite","actionLine","deleteAllButton","IndexesToBeRemoved","reduce","indexList","splice","pop","textDecoration","deleteItem","createMuiTheme","main","secondary","App","ThemeProvider","exact","path","DonePage","Login","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.40a128b5.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBlc-9cBQVLLXdLxYfVpgh8I3iFALoQ7E0\",\n    authDomain: \"todo-2ac34.firebaseapp.com\",\n    databaseURL: \"https://todo-2ac34.firebaseio.com\",\n    projectId: \"todo-2ac34\",\n    storageBucket: \"todo-2ac34.appspot.com\",\n    messagingSenderId: \"144767486267\",\n    appId: \"1:144767486267:web:53c6a77d36c83e42db4f1e\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n    firebase.auth().signInWithPopup(provider);\n};\n\n\nexport default firebase;\n","import React, {useEffect, useState} from \"react\";\nimport app from \"./firebase.js\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({children}) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [pending, setPending] = useState(true);\n\n    useEffect(() => {\n        if (process.env.REACT_APP_USE_MOCK===\"true\") {\n            setCurrentUser({email: \"MOCKUSER\"})\n            setPending(false)\n        } else {\n            app.auth().onAuthStateChanged((user) => {\n                setCurrentUser(user)\n                setPending(false)\n            });\n        }\n    }, []);\n\n    if (pending) {\n        return <>Loading...</>\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{\n                currentUser\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};","import React, {useCallback, useContext} from \"react\";\nimport {Redirect, withRouter} from \"react-router\";\nimport app from \"./firebase.js\";\nimport {AuthContext} from \"./Auth.js\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport {signInWithGoogle} from \"./firebase\";\nimport {Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Login = ({history}) => {\n    const classes = useStyles();\n\n    const handleLogin = useCallback(\n        async event => {\n            event.preventDefault();\n            const {email, password} = event.target.elements;\n            try {\n                await app\n                    .auth()\n                    .signInWithEmailAndPassword(email.value, password.value);\n                history.push(\"/\");\n            } catch (error) {\n                alert(error);\n            }\n        },\n        [history]\n    );\n\n    const {currentUser} = useContext(AuthContext);\n\n    if (currentUser) {\n        return <Redirect to=\"/\"/>;\n    }\n\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <form className={classes.form} noValidate onSubmit={handleLogin}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        className={classes.submit}\n                        color=\"primary\"\n                    >\n                        Sign In\n                    </Button>\n                </form>\n                <Typography variant={\"body1\"}>or</Typography>\n                <Button\n                    onClick={() => {\n                        signInWithGoogle();\n                    }}\n                    fullWidth\n                    variant=\"contained\"\n                    className={classes.submit}\n                    color=\"primary\"\n                >\n                    Sign In with Google\n                </Button>\n            </div>\n\n\n        </Container>\n    );\n};\n\nexport default withRouter(Login);","import React, {useContext} from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport {AuthContext} from \"./Auth\";\n\nconst PrivateRoute = ({component: RouteComponent, ...rest}) => {\n    const {currentUser} = useContext(AuthContext);\n    return (\n        <Route\n            {...rest}\n            render={routeProps =>\n                !!currentUser ? (\n                    <RouteComponent {...routeProps} />\n                ) : (\n                    <Redirect to={\"/login\"}/>\n                )\n            }\n        />\n    );\n};\n\n\nexport default PrivateRoute","import firebase from \"./firebase\";\nimport \"firebase/firestore\";\n\nconst collectionName = \"todoLists\";\n\nexport const getTodoForUser = (userId) => {\n    if (process.env.REACT_APP_USE_MOCK===\"true\") {\n        return new Promise((resolve, reject) => {\n            let MOCK_DATA = [\n                {id:\"1\",itemTitle: \"TODO-item 1\",\"isFavorite\": true, \"isDone\": false},\n                {id:\"2\",itemTitle: \"TODO-item 2\",\"isFavorite\": false, \"isDone\": false},\n                {id:\"3\",itemTitle: \"TODO-item 3\",\"isFavorite\": false, \"isDone\": true},\n                {id:\"4\",itemTitle: \"TODO-item 4\",\"isFavorite\": false, \"isDone\": true},\n                {id:\"5\",itemTitle: \"TODO-item 5\",\"isFavorite\": false, \"isDone\": false},\n                {id:\"6\",itemTitle: \"TODO-item 6\",\"isFavorite\": false, \"isDone\": true},\n                {id:\"7\",itemTitle: \"TODO-item 7\",\"isFavorite\": false, \"isDone\": false},\n\n\n\n            ];\n            console.log(\"Mock retrieving list\")\n            resolve(MOCK_DATA);\n        });\n    }\n    return firebase\n        .firestore()\n        .collection(collectionName)\n        .doc(userId)\n        .get()\n        .then((doc) => {\n            return doc.data().tasks;\n        });\n};\n\n\nexport const setTodoForUser = (userId, tasks) => {\n    if (process.env.REACT_APP_USE_MOCK===\"true\") {\n        console.log(\"Mock saving list\")\n        return;\n    }\n    return firebase\n        .firestore()\n        .collection(collectionName)\n        .doc(userId)\n        .set({tasks: tasks})\n        .then(() => {\n            console.log(\"Document successfully written!\");\n        })\n        .catch((error) => {\n            console.error(\"Error updating/creating document: \", error);\n        });\n};\n\n\n","import React, {useRef, useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Typography} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nconst EditableTextField = ({value, id, updateItemTitle}) => {\n\n    const [newValue, setNewValue] = useState(value);\n    const [editMode, setEditMode] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorText, setErrorText] = useState(\"\");\n\n    const useStyles = makeStyles({\n        textView: {\n            width: \"80%\",\n            cursor: \"pointer\",\n            display: editMode\n                ? \"none\"\n                : \"\",\n        },\n        inputView: {\n            width: \"80%\",\n            display: editMode\n                ? \"\"\n                : \"none\",\n        }\n    });\n\n    const classes = useStyles();\n    let textInput = useRef(null);\n\n    const turnOnEditMode = () => {\n        setTimeout(() => {\n            textInput.current.focus();\n        }, 100);\n        setEditMode(true);\n    };\n\n\n    const updateTitleIfValid = () => {\n        if (newValue.length > 0) {\n            setEditMode(false);\n            updateItemTitle(newValue, id);\n            setError(false);\n            setErrorText(\"\");\n        } else {\n            setError(true);\n            setErrorText(\"Denne kan ikke være tom\");\n        }\n    }\n\n    return (\n        <>\n            <Typography variant=\"body1\"\n                        className={classes.textView}\n                        onClick={turnOnEditMode}>\n                {newValue}\n            </Typography>\n            <TextField className={classes.inputView}\n                       variant=\"standard\"\n                       defaultValue={newValue}\n                       inputRef={textInput}\n                       required\n                       error={error}\n                       helperText={errorText}\n                       onKeyDown={(event) => {\n                           event.key === 'Enter' && updateTitleIfValid()\n                       }}\n                       onBlur={updateTitleIfValid}\n                       onChange={(event) => {\n                           setNewValue(event.target.value)\n                       }}\n            />\n        </>\n    );\n\n}\n\nexport default EditableTextField;\n","import React, {useContext, useState} from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {AuthContext} from \"./Auth\";\nimport app from \"./firebase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport {useHistory} from \"react-router\";\nimport {Divider} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.primary\n    },\n    title: {\n        flexGrow: 1,\n        cursor: 'pointer'\n    },\n    profileImage: {\n        borderRadius: '50%',\n        verticalAlign: 'middle',\n        maxWidth: '3rem',\n        maxHeight: '3rem',\n        marginRight: '1rem',\n    }\n}));\n\nconst AppHeader = () => {\n\n    const history = useHistory();\n    const classes = useStyles();\n    const {currentUser} = useContext(AuthContext);\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const goToDonePage = () => {\n        history.push(\"/done\");\n    }\n    const goToHomePage = () => {\n        history.push(\"/\");\n    }\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const signOut = () => app.auth().signOut();\n\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            <Toolbar>\n                <Typography variant=\"h6\" className={classes.title} onClick={goToHomePage}>\n                    TODOAPP\n                </Typography>\n                {!currentUser && <Button color=\"inherit\">Login</Button>}\n                {!!currentUser &&\n                <React.Fragment>\n                    <IconButton\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-controls=\"simple-menu\"\n                        aria-haspopup=\"true\"\n                        onClick={handleClick}>\n                        <MenuIcon/>\n                    </IconButton>\n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={!!anchorEl}\n                        onClose={handleClose}\n                    >\n                        <div style={{padding: \"8px\"}}>\n                            {currentUser.displayName\n                                ?\n                                <Typography variant=\"h6\"><img src={currentUser.photoURL} alt=\"Avatar\"\n                                                              className={classes.profileImage}/>{currentUser.displayName} </Typography>\n                                :\n                                <Typography variant=\"h6\">Signed in as: {currentUser.email} </Typography>\n                            }\n                        </div>\n                        <Divider/>\n                        <MenuItem onClick={goToDonePage}>Show done items</MenuItem>\n                        <MenuItem onClick={signOut}>Log out</MenuItem>\n                    </Menu>\n                </React.Fragment>\n                }\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default AppHeader;\n","import React, {useContext, useEffect, useState} from \"react\";\nimport {AuthContext} from \"./Auth\";\nimport {getTodoForUser, setTodoForUser} from \"./api\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport {Container, Draggable} from \"react-smooth-dnd\";\nimport arrayMove from \"array-move\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport DragHandleIcon from \"@material-ui/icons/DragHandle\";\nimport {Divider} from \"@material-ui/core\";\nimport {v4 as uuidv4} from 'uuid';\nimport EditableTextField from \"./EditableTextField\";\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {Favorite, FavoriteBorder} from \"@material-ui/icons\";\nimport AppHeader from \"./AppHeader\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1),\n        listStyleType: 'none', //hack!!\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    card: {\n        width: \"800px\",\n        minWidth: \"300px\"\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        padding: theme.spacing(1),\n        flex: 1,\n    },\n    inputfield: {},\n}));\n\n\nconst MainPage = () => {\n    const [newItemTitle, setNewItemTitle] = useState(\"\");\n    const [items, setItems] = useState([]);\n    const [waitForApi, setWaitForApi] = useState(false);\n    const {currentUser} = useContext(AuthContext);\n    const [allChangesSaved, setAllChangesSaved] = useState(true);\n    const classes = useStyles();\n\n    //Trigger (get list) on logged in user\n    useEffect(() => {\n        setWaitForApi(true);\n        getTodoForUser(currentUser.email)\n            .then((items) => {\n                setItems(items);\n            })\n            .catch((error) => {\n                console.log(\"Failed to load todo-list\", error)\n            })\n            .finally(() => {\n                setWaitForApi(false);\n            });\n    }, [currentUser.email]);\n\n    //Trigger (save list) on list change\n    useEffect(() => {\n        if (!allChangesSaved) {\n            setTodoForUser(currentUser.email, items);\n            setAllChangesSaved(true);\n        }\n    }, [items, allChangesSaved, currentUser.email]);\n\n    const addItem = (e) => {\n        e.preventDefault();\n        let newItem = {\n            \"itemTitle\": newItemTitle,\n            \"id\": uuidv4(),\n            \"isFavorite\": false,\n            \"isDone\": false,\n        };\n        setItems([...items, newItem]);\n        setNewItemTitle(\"\");\n        setAllChangesSaved(false);\n    };\n\n    const toggleItemDone = (id, e) => {\n        e.preventDefault();\n        let selectedItem = items.find(item => item.id === id);\n        selectedItem.isDone = !selectedItem.isDone;\n        setItems([...items])\n        setAllChangesSaved(false);\n    }\n\n    const toggleFavorite = (id, e) => {\n        e.preventDefault();\n        let selectedItem = items.find(item => item.id === id);\n        selectedItem.isFavorite = !selectedItem.isFavorite;\n        setItems([...items])\n        setAllChangesSaved(false);\n    }\n\n    const onDrop = ({removedIndex, addedIndex}) => {\n        const doneItems = items.filter(function (item) {\n            return !item.isDone;\n        })\n        const removedIndexInFullList = items.findIndex(item => item.id === doneItems[removedIndex].id)\n        const addedIndexInFullList = items.findIndex(item => item.id === doneItems[addedIndex].id)\n        setItems(items => arrayMove(items, removedIndexInFullList, addedIndexInFullList));\n        setAllChangesSaved(false);\n    };\n\n    const updateItemTitle = (updatedItemTitle, id) => {\n        items.find(item => item.id === id).itemTitle = updatedItemTitle;\n        setItems([...items])\n        setAllChangesSaved(false);\n    };\n\n    return (\n        <>\n            <AppHeader/>\n            <div className={classes.root}>\n                <div className={classes.card}>\n                    <form onSubmit={addItem}>\n                        <InputBase className={classes.input}\n                                   variant=\"standard\"\n                                   fullWidth\n                                   required\n                                   placeholder=\"Legg til en oppgave\"\n                                   value={newItemTitle}\n                                   onChange={(e) => setNewItemTitle(e.currentTarget.value)}\n                        />\n                    </form>\n                    <Container onDrop={onDrop} getChildPayload={(index) => items[index]}\n                               dragHandleSelector=\".drag-handle\"\n                               lockAxis=\"y\" dropPlaceholder={{\n                        animationDuration: 150,\n                        showOnTop: true,\n                        className: 'cards-drop-preview'\n                    }}>\n                        {items &&\n                        items.filter(function (item) {\n                            return !item.isDone;\n                        }).map(({id, isFavorite, itemTitle}) => {\n                            return (\n                                <Draggable key={id}>\n                                    <ListItem style={{height: \"3rem\"}}>\n                                        <ListItemIcon>\n                                            <IconButton onClick={(e) => toggleItemDone(id, e)}>\n                                                <CheckBoxOutlineBlankIcon/>\n                                            </IconButton>\n                                        </ListItemIcon>\n                                        <EditableTextField value={itemTitle} id={id}\n                                                           updateItemTitle={(value, id) => updateItemTitle(value, id)}/>\n                                        <ListItemSecondaryAction>\n                                            <ListItemIcon style={{minWidth: \"0\"}}>\n                                                <Checkbox checked={isFavorite} icon={<FavoriteBorder/>}\n                                                          checkedIcon={<Favorite/>}\n                                                          onClick={(e) => toggleFavorite(id, e)} name=\"checked\"/>\n                                            </ListItemIcon>\n                                            <ListItemIcon className=\"drag-handle\" style={{minWidth: \"0\", padding:\"1rem\"}}>\n                                                <DragHandleIcon/>\n                                            </ListItemIcon>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider/>\n                                </Draggable>\n                            );\n                        })}\n                    </Container>\n\n                    {waitForApi && (<pre>fetching data ...</pre>)}\n\n                    {/*<pre>*/}\n                    {/*    {JSON.stringify(items, undefined, 4)}*/}\n                    {/*</pre>*/}\n\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default MainPage;\n","import React, {useContext, useEffect, useState} from \"react\";\nimport {AuthContext} from \"./Auth\";\nimport {getTodoForUser, setTodoForUser} from \"./api\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport {Typography} from \"@material-ui/core\";\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport AppHeader from \"./AppHeader\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport {useHistory} from \"react-router\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1),\n        listStyleType: 'none', //hack!!\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    card: {\n        width: \"800px\",\n        minWidth: \"300px\"\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        padding: theme.spacing(1),\n        flex: 1,\n    },\n    actionLine: {\n        padding: \"5px\",\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    deleteAllButton: {}\n}));\n\n\nconst MainPage = () => {\n    const [items, setItems] = useState([]);\n    const [waitForApi, setWaitForApi] = useState(false);\n    const {currentUser} = useContext(AuthContext);\n    const [allChangesSaved, setAllChangesSaved] = useState(true);\n    const classes = useStyles();\n    const history = useHistory();\n\n\n    const goToHomePage = () => {\n        history.push(\"/\");\n    }\n\n    //Trigger (get list) on logged in user\n    useEffect(() => {\n        setWaitForApi(true);\n        getTodoForUser(currentUser.email)\n            .then((items) => {\n                setItems(items);\n            })\n            .catch((error) => {\n                console.log(\"Failed to load todo-list\", error)\n            })\n            .finally(() => {\n                setWaitForApi(false);\n            });\n    }, [currentUser.email]);\n\n    //Trigger (save list) on list change\n    useEffect(() => {\n        if (!allChangesSaved) {\n            setTodoForUser(currentUser.email, items);\n            setAllChangesSaved(true);\n        }\n    }, [items, allChangesSaved, currentUser.email]);\n\n\n    const deleteItem = (id, e) => {\n        items.splice(items.findIndex(item => item.id === id), 1)\n        setItems([...items]); //TODO: forstå denne\n        setAllChangesSaved(false);\n    }\n\n    const deleteAllDone = (e) => {\n        const IndexesToBeRemoved = items.reduce(function (indexList, item, index) {\n            if (item.isDone)\n                indexList.push(index);\n            return indexList;\n        }, []);\n        while(IndexesToBeRemoved.length) {\n            items.splice(IndexesToBeRemoved.pop(), 1);\n        }\n        setItems([...items])\n        setAllChangesSaved(false);\n    }\n\n    const toggleItemDone = (id, e) => {\n        e.preventDefault();\n        let selectedItem = items.find(item => item.id === id);\n        selectedItem.isDone = !selectedItem.isDone;\n        setItems([...items])\n        setAllChangesSaved(false);\n    }\n\n\n    return (\n        <>\n            <AppHeader/>\n            <div className={classes.root}>\n                <div className={classes.card}>\n                    <div className={classes.actionLine}>\n                        <IconButton onClick={goToHomePage}>\n                            <ArrowBackIcon/>\n                        </IconButton>\n                        <Button onClick={deleteAllDone} className={classes.deleteAllButton}>\n                            Delete all\n                        </Button>\n                    </div>\n                    {items\n                    && items.filter(item => item.isDone)\n                        .map(({id, itemTitle}) => {\n                            return (\n                                <ListItem key={id} style={{height: \"3rem\"}}>\n                                    <ListItemIcon>\n                                        <IconButton onClick={(e) => toggleItemDone(id, e)}>\n                                            <CheckBoxIcon/>\n                                        </IconButton>\n                                    </ListItemIcon>\n                                    <Typography variant=\"body1\" style={{textDecoration: \"line-through\"}}>\n                                        {itemTitle}\n                                    </Typography>\n                                    <ListItemSecondaryAction>\n                                        <ListItemIcon>\n                                            <IconButton onClick={(e) => deleteItem(id, e)}>\n                                                <DeleteIcon/>\n                                            </IconButton>\n                                        </ListItemIcon>\n\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            );\n                        })}\n\n                    {waitForApi && (<pre>fetching data ...</pre>)}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default MainPage;\n","import React from \"react\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport {AuthProvider} from \"./Auth\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport MainPage from \"./MainPage\";\nimport {createMuiTheme} from '@material-ui/core/styles';\nimport {ThemeProvider} from \"@material-ui/styles\";\nimport DonePage from \"./DonePage\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#494D5F\",\n        },\n        secondary: {\n            main: \"#8458B3\",\n        },\n    },\n});\n\nconst App = () => {\n    return (\n        <ThemeProvider theme={theme}>\n            <AuthProvider>\n                <Router>\n                    <PrivateRoute exact path=\"/\" component={MainPage}/>\n                    <Route exact path=\"/done\" component={DonePage}/>\n                    <Route exact path=\"/login\" component={Login}/>\n                </Router>\n            </AuthProvider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}