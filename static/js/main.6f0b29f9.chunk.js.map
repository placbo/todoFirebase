{"version":3,"sources":["firebase.js","Auth.js","Login.js","PrivateRoute.js","api.js","EditableTextField.js","AppHeader.js","MainPage.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","app","onAuthStateChanged","user","Provider","value","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","withRouter","classes","useContext","to","Container","component","maxWidth","CssBaseline","className","Button","onClick","signInWithPopup","fullWidth","variant","color","PrivateRoute","RouteComponent","rest","render","routeProps","getTodoListsForUser","userId","a","listIds","firestore","collection","get","then","querySnapshot","forEach","doc","console","log","data","push","id","catch","error","finally","EditableTextField","updateItemTitle","newValue","setNewValue","editMode","setEditMode","setError","errorText","setErrorText","textView","textOverflow","cursor","overflow","whiteSpace","inputView","textInput","useRef","updateTitleIfValid","length","Typography","setTimeout","current","focus","TextField","defaultValue","inputRef","required","helperText","onKeyDown","event","key","onBlur","onChange","target","root","backgroundColor","palette","primary","title","toolbar","justifyContent","profileImage","borderRadius","verticalAlign","maxHeight","marginRight","AppHeader","todoLists","onchange","currentTodoList","history","useHistory","anchorEl","setAnchorEl","AppBar","position","Toolbar","Select","style","labelId","map","listItem","MenuItem","IconButton","aria-controls","aria-haspopup","currentTarget","keepMounted","open","onClose","padding","displayName","src","photoURL","alt","email","Divider","signOut","listStyleType","card","minWidth","actionLine","input","marginLeft","marginBottom","flex","inputfield","MainPage","setCurrentTodoList","newItemTitle","setNewItemTitle","items","setItems","setTodoLists","loading","setLoading","allChangesSaved","setAllChangesSaved","list","listId","tasks","set","toggleItemDone","e","preventDefault","selectedItem","find","item","isDone","textAlign","onSubmit","newItem","itemTitle","uuidv4","isFavorite","placeholder","onDrop","removedIndex","addedIndex","doneItems","filter","removedIndexInFullList","findIndex","addedIndexInFullList","arrayMove","getChildPayload","index","dragHandleSelector","lockAxis","dropPlaceholder","animationDuration","showOnTop","ListItem","height","ListItemIcon","updatedItemTitle","ListItemSecondaryAction","Checkbox","checked","icon","FavoriteBorder","checkedIcon","Favorite","toggleFavorite","name","textDecoration","splice","deleteItem","IndexesToBeRemoved","reduce","indexList","pop","deleteAllButton","createMuiTheme","main","secondary","App","ThemeProvider","exact","path","Login","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6f0b29f9.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBlc-9cBQVLLXdLxYfVpgh8I3iFALoQ7E0',\n  authDomain: 'todo-2ac34.firebaseapp.com',\n  databaseURL: 'https://todo-2ac34.firebaseio.com',\n  projectId: 'todo-2ac34',\n  storageBucket: 'todo-2ac34.appspot.com',\n  messagingSenderId: '144767486267',\n  appId: '1:144767486267:web:53c6a77d36c83e42db4f1e',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  firebase.auth().signInWithPopup(provider);\n};\n\nexport default firebase;\n","import React, { useEffect, useState } from 'react';\nimport app from './firebase';\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n\n  useEffect(() => {\n    if (process.env.REACT_APP_USE_MOCK === 'true') {\n      setCurrentUser({ email: 'MOCKUSER' });\n      setPending(false);\n    } else {\n      app.auth().onAuthStateChanged((user) => {\n        setCurrentUser(user);\n        setPending(false);\n      });\n    }\n  }, []);\n\n  if (pending) {\n    return <>Loading...</>;\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n      }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Redirect, withRouter } from 'react-router';\nimport { AuthContext } from './Auth.js';\nimport Button from '@material-ui/core/Button';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { signInWithGoogle } from './firebase';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Button\n          onClick={() => {\n            signInWithGoogle();\n          }}\n          fullWidth\n          variant=\"contained\"\n          className={classes.submit}\n          color=\"primary\">\n          Sign In with Google\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default withRouter(Login);\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth';\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const { currentUser } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) => (!!currentUser ? <RouteComponent {...routeProps} /> : <Redirect to={'/login'} />)}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import firebase from './firebase';\nimport 'firebase/firestore';\n\nexport const getTodoListsForUser = async (userId) => {\n  if (process.env.REACT_APP_USE_MOCK === 'true') {\n    return ['list1', 'list2'];\n  }\n  let listIds = [];\n  await firebase\n    .firestore()\n    .collection(userId)\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        console.log(doc.data());\n        listIds.push(doc.id);\n      });\n    })\n    .catch((error) => {\n      console.log('Failed to load todo-list', error);\n    })\n    .finally(() => {\n      console.log('list!', listIds);\n    });\n  return listIds;\n};\n\nexport const getTodoForUser = (userId, listId) => {\n  console.log(userId);\n  console.log(listId);\n  if (process.env.REACT_APP_USE_MOCK === 'true') {\n    return new Promise((resolve, reject) => {\n      let MOCK_DATA = {\n        tasks: [\n          { id: '1', itemTitle: 'TODO-item 1', isFavorite: true, isDone: false },\n          { id: '2', itemTitle: 'TODO-item 2', isFavorite: false, isDone: false },\n          {\n            id: '3',\n            itemTitle: 'TODO-item 3 masse masse masse tekst her ja , ikke der, nei. ',\n            isFavorite: false,\n            isDone: false,\n          },\n          { id: '4', itemTitle: 'TODO-item 4', isFavorite: false, isDone: true },\n          { id: '5', itemTitle: 'TODO-item 5', isFavorite: false, isDone: false },\n          { id: '6', itemTitle: 'TODO-item 6', isFavorite: false, isDone: true },\n          { id: '7', itemTitle: 'TODO-item 7', isFavorite: false, isDone: false },\n        ],\n      };\n      let MOCK_DATA2 = {\n        tasks: [{ id: '1', itemTitle: 'TODO-item 1', isFavorite: true, isDone: false }],\n      };\n      console.log('Mock retrieving list');\n      listId === 'list1' ? resolve(MOCK_DATA) : resolve(MOCK_DATA2);\n    });\n  }\n  return firebase\n    .firestore()\n    .collection(userId)\n    .doc(listId)\n    .get()\n    .then((doc) => {\n      return doc.data();\n    });\n};\n\nexport const setTodoForUser = (userId, listId, tasks) => {\n  if (process.env.REACT_APP_USE_MOCK === 'true') {\n    console.log('Mock saving list');\n    return;\n  }\n  return firebase\n    .firestore()\n    .collection(userId)\n    .doc(listId)\n    .set({ tasks: tasks })\n    .then(() => {\n      console.log('Document successfully written!');\n    })\n    .catch((error) => {\n      console.error('Error updating/creating document: ', error);\n    });\n};\n","import React, { useRef, useState } from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nconst EditableTextField = ({ value, id, updateItemTitle }) => {\n  const [newValue, setNewValue] = useState(value);\n  const [editMode, setEditMode] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState('');\n\n  const useStyles = makeStyles({\n    textView: {\n      width: '50%',\n      textOverflow: 'ellipsis',\n      cursor: 'pointer',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      display: editMode ? 'none' : '',\n    },\n    inputView: {\n      width: '50%',\n      display: editMode ? '' : 'none',\n    },\n  });\n\n  const classes = useStyles();\n  let textInput = useRef(null);\n\n  const turnOnEditMode = () => {\n    setTimeout(() => {\n      textInput.current.focus();\n    }, 100);\n    setEditMode(true);\n  };\n\n  const updateTitleIfValid = () => {\n    if (newValue.length > 0) {\n      setEditMode(false);\n      updateItemTitle(newValue, id);\n      setError(false);\n      setErrorText('');\n    } else {\n      setError(true);\n      setErrorText('Denne kan ikke være tom');\n    }\n  };\n\n  return (\n    <>\n      <Typography variant=\"body1\" className={classes.textView} onClick={turnOnEditMode}>\n        {newValue}\n      </Typography>\n      <TextField\n        className={classes.inputView}\n        variant=\"standard\"\n        defaultValue={newValue}\n        inputRef={textInput}\n        required\n        error={error}\n        helperText={errorText}\n        onKeyDown={(event) => {\n          event.key === 'Enter' && updateTitleIfValid();\n        }}\n        onBlur={updateTitleIfValid}\n        onChange={(event) => {\n          setNewValue(event.target.value);\n        }}\n      />\n    </>\n  );\n};\n\nexport default EditableTextField;\n","import React, { useContext, useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { AuthContext } from './Auth';\nimport app from './firebase';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { useHistory } from 'react-router';\nimport { Divider } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary,\n  },\n  title: {\n    cursor: 'pointer',\n  },\n  toolbar: {\n    justifyContent: 'space-between',\n  },\n  profileImage: {\n    borderRadius: '50%',\n    verticalAlign: 'middle',\n    maxWidth: '3rem',\n    maxHeight: '3rem',\n    marginRight: '1rem',\n  },\n}));\n\nconst AppHeader = ({ todoLists, onchange, currentTodoList }) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const { currentUser } = useContext(AuthContext);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const goToHomePage = () => {\n    history.push('/');\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const signOut = () => {\n    app\n      .auth()\n      .signOut()\n      .then(() => {\n        history.push('/');\n      });\n  };\n\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\" className={classes.title} onClick={goToHomePage}>\n          TODOAPP\n        </Typography>\n        {!currentUser && <Button color=\"inherit\">Login</Button>}\n        {!!currentUser && (\n          <>\n            <div>\n              {todoLists.length > 0 && (\n                <Select\n                  fullWidth\n                  style={{ width: '10rem', backgroundColor: '#ffffff' }}\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={currentTodoList}\n                  variant=\"outlined\"\n                  onChange={onchange}>\n                  {todoLists.map((listItem) => {\n                    return (\n                      <MenuItem key={listItem} value={listItem}>\n                        {listItem}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              )}\n            </div>\n            <IconButton color=\"inherit\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n              <MenuIcon />\n            </IconButton>\n\n            <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={!!anchorEl} onClose={handleClose}>\n              <div style={{ padding: '8px' }}>\n                {currentUser.displayName ? (\n                  <Typography variant=\"h6\">\n                    <img src={currentUser.photoURL} alt=\"Avatar\" className={classes.profileImage} />\n                    {currentUser.displayName}{' '}\n                  </Typography>\n                ) : (\n                  <Typography variant=\"h6\">Signed in as: {currentUser.email} </Typography>\n                )}\n              </div>\n              <Divider />\n              <MenuItem onClick={signOut}>Log out</MenuItem>\n            </Menu>\n          </>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default AppHeader;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from './Auth';\nimport { getTodoForUser, getTodoListsForUser, setTodoForUser } from './api';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItem from '@material-ui/core/ListItem';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Container, Draggable } from 'react-smooth-dnd';\nimport arrayMove from 'array-move';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport { Divider, Typography } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport EditableTextField from './EditableTextField';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Favorite, FavoriteBorder } from '@material-ui/icons';\nimport AppHeader from './AppHeader';\nimport TextField from '@material-ui/core/TextField';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n    listStyleType: 'none', //hack!!\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  card: {\n    width: '800px',\n    minWidth: '300px',\n    overflow: 'hidden',\n  },\n  actionLine: {\n    padding: '5px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(1),\n    flex: 1,\n    width: '80%',\n  },\n  inputfield: {},\n}));\n\nconst MainPage = () => {\n  //let DEFAULT_LIST = 'vN7e392zKXgAC4RLL4Fp';\n\n  const [currentTodoList, setCurrentTodoList] = useState('');\n  const [newItemTitle, setNewItemTitle] = useState('');\n  const [items, setItems] = useState([]);\n  const [todoLists, setTodoLists] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { currentUser } = useContext(AuthContext);\n  const [allChangesSaved, setAllChangesSaved] = useState(true);\n  const classes = useStyles();\n\n  useEffect(() => {\n    setLoading(true);\n    getTodoListsForUser(currentUser.email).then((list) => {\n      if (list && list.length > 0) {\n        setTodoLists(list);\n        setCurrentTodoList(list[0]);\n      }\n      setLoading(false);\n    });\n  }, [currentUser.email]);\n\n  //Trigger (get list) on logged in user\n  useEffect(() => {\n    setLoading(true);\n    currentTodoList.length > 0 &&\n      getTodoForUser(currentUser.email, currentTodoList)\n        .then((data) => {\n          console.log('Fetched: ', data);\n          data.tasks && setItems(data.tasks);\n        })\n        .catch((error) => {\n          console.log('Failed to load todo-list', error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n  }, [currentUser.email, currentTodoList]);\n\n  //Trigger (save list) on list change\n  useEffect(() => {\n    if (!allChangesSaved) {\n      console.log(items);\n      setTodoForUser(currentUser.email, currentTodoList, items).then(() => {\n        setAllChangesSaved(true);\n      });\n      //TODO: try catch\n    }\n  }, [items, allChangesSaved, currentUser.email, currentTodoList]);\n\n  const addItem = (e) => {\n    e.preventDefault();\n    console.log(items);\n    let newItem = {\n      itemTitle: newItemTitle,\n      id: uuidv4(),\n      isFavorite: false,\n      isDone: false,\n    };\n    setItems([...items, newItem]);\n    setNewItemTitle('');\n    console.log(items);\n    setAllChangesSaved(false);\n  };\n\n  const toggleItemDone = (id, e) => {\n    e.preventDefault();\n    let selectedItem = items.find((item) => item.id === id);\n    selectedItem.isDone = !selectedItem.isDone;\n    setItems([...items]);\n    setAllChangesSaved(false);\n  };\n\n  const toggleFavorite = (id, e) => {\n    e.preventDefault();\n    let selectedItem = items.find((item) => item.id === id);\n    selectedItem.isFavorite = !selectedItem.isFavorite;\n    setItems([...items]);\n    setAllChangesSaved(false);\n  };\n\n  const onDrop = ({ removedIndex, addedIndex }) => {\n    const doneItems = items.filter(function (item) {\n      return !item.isDone;\n    });\n    const removedIndexInFullList = items.findIndex((item) => item.id === doneItems[removedIndex].id);\n    const addedIndexInFullList = items.findIndex((item) => item.id === doneItems[addedIndex].id);\n    setItems((items) => arrayMove(items, removedIndexInFullList, addedIndexInFullList));\n    setAllChangesSaved(false);\n  };\n\n  const updateItemTitle = (updatedItemTitle, id) => {\n    items.find((item) => item.id === id).itemTitle = updatedItemTitle;\n    setItems([...items]);\n    setAllChangesSaved(false);\n  };\n\n  const deleteItem = (id, e) => {\n    items.splice(\n      items.findIndex((item) => item.id === id),\n      1\n    );\n    setItems([...items]); //TODO: forstå denne\n    setAllChangesSaved(false);\n  };\n\n  const deleteAllDone = (e) => {\n    const IndexesToBeRemoved = items.reduce(function (indexList, item, index) {\n      if (item.isDone) indexList.push(index);\n      return indexList;\n    }, []);\n    while (IndexesToBeRemoved.length) {\n      items.splice(IndexesToBeRemoved.pop(), 1);\n    }\n    setItems([...items]);\n    setAllChangesSaved(false);\n  };\n\n  const handleChangeSelectedTodoList = (event) => {\n    setCurrentTodoList(event.target.value);\n  };\n\n  return (\n    <>\n      <AppHeader todoLists={todoLists} onchange={handleChangeSelectedTodoList} currentTodoList={currentTodoList} />\n      <div className={classes.root}>\n        <div className={classes.card}>\n          <form style={{ textAlign: 'center' }} onSubmit={addItem}>\n            <TextField\n              className={classes.input}\n              variant=\"outlined\"\n              fullWidth\n              required\n              placeholder=\"Legg til en oppgave\"\n              value={newItemTitle}\n              onChange={(e) => setNewItemTitle(e.currentTarget.value)}\n            />\n          </form>\n          <Container\n            onDrop={onDrop}\n            getChildPayload={(index) => items[index]}\n            dragHandleSelector=\".drag-handle\"\n            lockAxis=\"y\"\n            dropPlaceholder={{\n              animationDuration: 150,\n              showOnTop: true,\n              className: 'cards-drop-preview',\n            }}>\n            {items &&\n              items\n                .filter(function (item) {\n                  return !item.isDone;\n                })\n                .map(({ id, isFavorite, itemTitle }) => {\n                  return (\n                    <Draggable key={id}>\n                      <ListItem style={{ height: '3rem', padding: '1rem' }}>\n                        <ListItemIcon>\n                          <IconButton onClick={(e) => toggleItemDone(id, e)}>\n                            <CheckCircleOutlineIcon />\n                          </IconButton>\n                        </ListItemIcon>\n                        <EditableTextField\n                          value={itemTitle}\n                          id={id}\n                          updateItemTitle={(value, id) => updateItemTitle(value, id)}\n                        />\n                        <ListItemSecondaryAction>\n                          <ListItemIcon style={{ minWidth: '0' }}>\n                            <Checkbox\n                              checked={isFavorite}\n                              icon={<FavoriteBorder />}\n                              checkedIcon={<Favorite />}\n                              onClick={(e) => toggleFavorite(id, e)}\n                              name=\"checked\"\n                            />\n                          </ListItemIcon>\n                          <ListItemIcon className=\"drag-handle\" style={{ minWidth: '0', padding: '1rem' }}>\n                            <DragHandleIcon />\n                          </ListItemIcon>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                      <Divider />\n                    </Draggable>\n                  );\n                })}\n            <Divider />\n            {items &&\n              items\n                .filter((item) => item.isDone)\n                .map(({ id, itemTitle }) => {\n                  return (\n                    <ListItem key={id} style={{ height: '3rem' }}>\n                      <ListItemIcon>\n                        <IconButton onClick={(e) => toggleItemDone(id, e)}>\n                          <CheckCircleIcon />\n                        </IconButton>\n                      </ListItemIcon>\n                      <Typography variant=\"body1\" style={{ textDecoration: 'line-through' }}>\n                        {itemTitle}\n                      </Typography>\n                      <ListItemSecondaryAction>\n                        <ListItemIcon>\n                          <IconButton onClick={(e) => deleteItem(id, e)}>\n                            <DeleteIcon />\n                          </IconButton>\n                        </ListItemIcon>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  );\n                })}\n\n            <div className={classes.actionLine}>\n              <Button onClick={deleteAllDone} className={classes.deleteAllButton}>\n                Remove finished\n              </Button>\n            </div>\n          </Container>\n\n          {loading && <pre>fetching data ...</pre>}\n\n          {/*<pre>{JSON.stringify(items, undefined, 2)}</pre>*/}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Login from './Login';\nimport { AuthProvider } from './Auth';\nimport PrivateRoute from './PrivateRoute';\nimport MainPage from './MainPage';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#494D5F',\n    },\n    secondary: {\n      main: '#8458B3',\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <AuthProvider>\n        <Router>\n          <PrivateRoute exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/login\" component={Login} />\n        </Router>\n      </AuthProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}