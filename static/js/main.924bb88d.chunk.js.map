{"version":3,"sources":["firebase.js","Auth.js","Login.js","PrivateRoute.js","api.js","EditableTextField.js","AppHeader.js","MainPage.js","UnauthorisedPage.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","app","onAuthStateChanged","user","Provider","value","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","withRouter","classes","useContext","to","Container","component","maxWidth","CssBaseline","className","Button","onClick","signInWithPopup","fullWidth","variant","color","PCB","PrivateRoute","RouteComponent","rest","render","routeProps","email","getTodoListsForUser","userId","a","listIds","firestore","collection","get","then","querySnapshot","forEach","doc","push","id","catch","error","console","getTodoForUser","listId","data","EditableTextField","updateItemTitle","newValue","setNewValue","editMode","setEditMode","setError","errorText","setErrorText","textView","textOverflow","cursor","overflow","whiteSpace","inputView","textInput","useRef","updateTitleIfValid","length","Typography","setTimeout","current","focus","TextField","defaultValue","inputRef","required","helperText","onKeyDown","event","key","onBlur","onChange","target","root","backgroundColor","palette","primary","title","toolbar","justifyContent","profileImage","borderRadius","verticalAlign","maxHeight","marginRight","AppHeader","todoLists","onchange","currentTodoList","history","useHistory","anchorEl","setAnchorEl","AppBar","position","Toolbar","Select","style","height","labelId","map","listItem","MenuItem","IconButton","aria-controls","aria-haspopup","currentTarget","keepMounted","open","onClose","padding","displayName","src","photoURL","alt","Divider","signOut","listStyleType","card","minWidth","actionLine","input","marginLeft","marginBottom","flex","inputfield","MainPage","setCurrentTodoList","newItemTitle","setNewItemTitle","items","setItems","setTodoLists","loading","setLoading","allChangesSaved","setAllChangesSaved","result","loadListsForCurrentList","tasks","loadTasksForCurrentList","set","toggleItemDone","e","preventDefault","selectedItem","find","item","isDone","textAlign","onSubmit","newItem","itemTitle","uuidv4","isFavorite","placeholder","onDrop","removedIndex","addedIndex","doneItems","filter","removedIndexInFullList","findIndex","addedIndexInFullList","arrayMove","getChildPayload","index","dragHandleSelector","lockAxis","dropPlaceholder","animationDuration","showOnTop","ListItem","ListItemIcon","updatedItemTitle","ListItemSecondaryAction","Checkbox","checked","icon","FavoriteBorder","checkedIcon","Favorite","toggleFavorite","name","IndexesToBeRemoved","reduce","indexList","splice","pop","deleteAllButton","textDecoration","deleteItem","log","href","createMuiTheme","main","secondary","App","ThemeProvider","exact","path","Login","UnauthorisedPage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.924bb88d.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBlc-9cBQVLLXdLxYfVpgh8I3iFALoQ7E0',\n  authDomain: 'todo-2ac34.firebaseapp.com',\n  databaseURL: 'https://todo-2ac34.firebaseio.com',\n  projectId: 'todo-2ac34',\n  storageBucket: 'todo-2ac34.appspot.com',\n  messagingSenderId: '144767486267',\n  appId: '1:144767486267:web:53c6a77d36c83e42db4f1e',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  firebase.auth().signInWithPopup(provider);\n};\n\nexport default firebase;\n","import React, { useEffect, useState } from 'react';\nimport app from './firebase';\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n\n  useEffect(() => {\n    if (process.env.REACT_APP_USE_MOCK === 'true') {\n      setCurrentUser({ email: 'MOCKUSER' });\n      setPending(false);\n    } else {\n      app.auth().onAuthStateChanged((user) => {\n        setCurrentUser(user);\n        setPending(false);\n      });\n    }\n  }, []);\n\n  if (pending) {\n    return <>Loading...</>;\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n      }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Redirect, withRouter } from 'react-router';\nimport { AuthContext } from './Auth.js';\nimport Button from '@material-ui/core/Button';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { signInWithGoogle } from './firebase';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Button\n          onClick={() => {\n            signInWithGoogle();\n          }}\n          fullWidth\n          variant=\"contained\"\n          className={classes.submit}\n          color=\"primary\">\n          Sign In with Google\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default withRouter(Login);\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth';\n\n//const MARIA = 'flettemia@google.com';\nconst MARIA = 'msindre@yahoo.co.uk';\nexport const PCB = 'perbjester@gmail.com';\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const { currentUser } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) =>\n        currentUser ? (\n          currentUser.email === PCB || currentUser.email === MARIA ? (\n            <RouteComponent {...routeProps} />\n          ) : (\n            <Redirect to={'/unauthorised'} />\n          )\n        ) : (\n          <Redirect to={'/login'} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import firebase from './firebase';\nimport 'firebase/firestore';\nimport { PCB } from './PrivateRoute';\n\nexport const getTodoListsForUser = async (userId) => {\n  if (process.env.REACT_APP_USE_MOCK === 'true') {\n    return ['list1', 'list2'];\n  }\n  userId = PCB; //TODO!! remove override\n  let listIds = [];\n  await firebase\n    .firestore()\n    .collection(userId)\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        listIds.push(doc.id);\n      });\n    })\n    .catch((error) => {\n      console.error('Failed to load todo-list', error);\n    });\n  return listIds;\n};\n\nexport const getTodoForUser = async (userId, listId) => {\n  if (process.env.REACT_APP_USE_MOCK === 'true') {\n    return new Promise((resolve, reject) => {\n      let MOCK_DATA = {\n        tasks: [\n          { id: '1', itemTitle: 'TODO-item 1', isFavorite: true, isDone: false },\n          { id: '2', itemTitle: 'TODO-item 2', isFavorite: false, isDone: false },\n          {\n            id: '3',\n            itemTitle: 'TODO-item 3 masse masse masse tekst her ja , ikke der, nei. ',\n            isFavorite: false,\n            isDone: false,\n          },\n          { id: '4', itemTitle: 'TODO-item 4', isFavorite: false, isDone: true },\n          { id: '5', itemTitle: 'TODO-item 5', isFavorite: false, isDone: false },\n          { id: '6', itemTitle: 'TODO-item 6', isFavorite: false, isDone: true },\n          { id: '7', itemTitle: 'TODO-item 7', isFavorite: false, isDone: false },\n        ],\n      };\n      let MOCK_DATA2 = {\n        tasks: [{ id: '1', itemTitle: 'TODO-item 1', isFavorite: true, isDone: false }],\n      };\n      listId === 'list1' ? resolve(MOCK_DATA) : resolve(MOCK_DATA2);\n    });\n  }\n  userId = PCB; //TODO!! remove override\n  return firebase\n    .firestore()\n    .collection(userId)\n    .doc(listId)\n    .get()\n    .then((doc) => {\n      return doc.data();\n    });\n};\n\nexport const setTodoForUser = (userId, listId, tasks) => {\n  if (process.env.REACT_APP_USE_MOCK === 'true') {\n    return;\n  }\n  userId = PCB; //TODO!! remove override\n  return firebase\n    .firestore()\n    .collection(userId)\n    .doc(listId)\n    .set({ tasks: tasks })\n    .then(() => {\n      // console.log('Document successfully written!');\n    })\n    .catch((error) => {\n      console.error('Error updating/creating document: ', error);\n    });\n};\n","import React, { useRef, useState } from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nconst EditableTextField = ({ value, id, updateItemTitle }) => {\n  const [newValue, setNewValue] = useState(value);\n  const [editMode, setEditMode] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState('');\n\n  const useStyles = makeStyles({\n    textView: {\n      width: '50%',\n      textOverflow: 'ellipsis',\n      cursor: 'pointer',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      display: editMode ? 'none' : '',\n    },\n    inputView: {\n      width: '50%',\n      display: editMode ? '' : 'none',\n    },\n  });\n\n  const classes = useStyles();\n  let textInput = useRef(null);\n\n  const turnOnEditMode = () => {\n    setTimeout(() => {\n      textInput.current.focus();\n    }, 100);\n    setEditMode(true);\n  };\n\n  const updateTitleIfValid = () => {\n    if (newValue.length > 0) {\n      setEditMode(false);\n      updateItemTitle(newValue, id);\n      setError(false);\n      setErrorText('');\n    } else {\n      setError(true);\n      setErrorText('Denne kan ikke være tom');\n    }\n  };\n\n  return (\n    <>\n      <Typography variant=\"body1\" className={classes.textView} onClick={turnOnEditMode}>\n        {newValue}\n      </Typography>\n      <TextField\n        className={classes.inputView}\n        variant=\"standard\"\n        defaultValue={newValue}\n        inputRef={textInput}\n        required\n        error={error}\n        helperText={errorText}\n        onKeyDown={(event) => {\n          event.key === 'Enter' && updateTitleIfValid();\n        }}\n        onBlur={updateTitleIfValid}\n        onChange={(event) => {\n          setNewValue(event.target.value);\n        }}\n      />\n    </>\n  );\n};\n\nexport default EditableTextField;\n","import React, { useContext, useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { AuthContext } from './Auth';\nimport app from './firebase';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { useHistory } from 'react-router';\nimport { Divider } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary,\n  },\n  title: {\n    cursor: 'pointer',\n  },\n  toolbar: {\n    justifyContent: 'space-between',\n  },\n  profileImage: {\n    borderRadius: '50%',\n    verticalAlign: 'middle',\n    maxWidth: '3rem',\n    maxHeight: '3rem',\n    marginRight: '1rem',\n  },\n}));\n\nconst AppHeader = ({ todoLists, onchange, currentTodoList }) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const { currentUser } = useContext(AuthContext);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const goToHomePage = () => {\n    history.push('/');\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const signOut = () => {\n    app\n      .auth()\n      .signOut()\n      .then(() => {\n        history.push('/');\n      });\n  };\n\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar className={classes.toolbar}>\n        <Typography variant=\"h6\" className={classes.title} onClick={goToHomePage}>\n          TODOAPP\n        </Typography>\n        {currentUser && (\n          <>\n            {todoLists.length > 0 && currentTodoList && (\n              <Select\n                fullWidth\n                style={{ width: '10rem', height: '2rem', backgroundColor: '#ffffff' }}\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={currentTodoList}\n                variant=\"outlined\"\n                onChange={onchange}>\n                {todoLists.map((listItem) => {\n                  return (\n                    <MenuItem key={listItem} value={listItem}>\n                      {listItem}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            )}\n            <IconButton color=\"inherit\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n              <MenuIcon />\n            </IconButton>\n\n            <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={!!anchorEl} onClose={handleClose}>\n              <div style={{ padding: '8px' }}>\n                {currentUser.displayName ? (\n                  <Typography variant=\"h6\">\n                    <img src={currentUser.photoURL} alt=\"Avatar\" className={classes.profileImage} />\n                    {currentUser.displayName}{' '}\n                  </Typography>\n                ) : (\n                  <Typography variant=\"h6\">Signed in as: {currentUser.email} </Typography>\n                )}\n              </div>\n              <Divider />\n              <MenuItem onClick={signOut}>Log out</MenuItem>\n            </Menu>\n          </>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default AppHeader;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from './Auth';\nimport { getTodoForUser, getTodoListsForUser, setTodoForUser } from './api';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItem from '@material-ui/core/ListItem';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Container, Draggable } from 'react-smooth-dnd';\nimport arrayMove from 'array-move';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport { Divider, Typography } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport EditableTextField from './EditableTextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Favorite, FavoriteBorder } from '@material-ui/icons';\nimport AppHeader from './AppHeader';\nimport TextField from '@material-ui/core/TextField';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n    listStyleType: 'none', //hack!!\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  card: {\n    width: '800px',\n    minWidth: '300px',\n    overflow: 'hidden',\n  },\n  actionLine: {\n    padding: '5px',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(1),\n    flex: 1,\n    width: '80%',\n  },\n  inputfield: {},\n}));\n\nconst MainPage = () => {\n  const [currentTodoList, setCurrentTodoList] = useState();\n  const [newItemTitle, setNewItemTitle] = useState('');\n  const [items, setItems] = useState([]);\n  const [todoLists, setTodoLists] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { currentUser } = useContext(AuthContext);\n  const [allChangesSaved, setAllChangesSaved] = useState(true);\n  const classes = useStyles();\n\n  useEffect(() => {\n    const loadListsForCurrentList = async () => {\n      try {\n        setLoading(true);\n        let result = await getTodoListsForUser(currentUser.email);\n        if (result && result.length > 0) {\n          setTodoLists(result);\n          setCurrentTodoList(result[0]);\n        }\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadListsForCurrentList().then();\n  }, [currentUser.email]);\n\n  //Trigger (get list) on logged in user\n  useEffect(() => {\n    const loadTasksForCurrentList = async () => {\n      if (currentTodoList) {\n        try {\n          setLoading(true);\n          let result = await getTodoForUser(currentUser.email, currentTodoList);\n          if (result.tasks) setItems(result.tasks);\n        } catch (error) {\n          console.error('Failed to load todo-list', error);\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n    loadTasksForCurrentList().then();\n  }, [currentUser.email, currentTodoList]);\n\n  //Trigger (save list) on list change\n  useEffect(() => {\n    if (!allChangesSaved) {\n      setTodoForUser(currentUser.email, currentTodoList, items).then(() => {\n        setAllChangesSaved(true);\n      });\n      //TODO: try catch\n    }\n  }, [items, allChangesSaved, currentUser.email, currentTodoList]);\n\n  const addItem = (e) => {\n    e.preventDefault();\n    let newItem = {\n      itemTitle: newItemTitle,\n      id: uuidv4(),\n      isFavorite: false,\n      isDone: false,\n    };\n    setItems([newItem, ...items]);\n    setNewItemTitle('');\n    setAllChangesSaved(false);\n  };\n\n  const toggleItemDone = (id, e) => {\n    e.preventDefault();\n    let selectedItem = items.find((item) => item.id === id);\n    selectedItem.isDone = !selectedItem.isDone;\n    setItems([...items]);\n    setAllChangesSaved(false);\n  };\n\n  const toggleFavorite = (id, e) => {\n    e.preventDefault();\n    let selectedItem = items.find((item) => item.id === id);\n    selectedItem.isFavorite = !selectedItem.isFavorite;\n    setItems([...items]);\n    setAllChangesSaved(false);\n  };\n\n  const onDrop = ({ removedIndex, addedIndex }) => {\n    const doneItems = items.filter(function (item) {\n      return !item.isDone;\n    });\n    const removedIndexInFullList = items.findIndex((item) => item.id === doneItems[removedIndex].id);\n    const addedIndexInFullList = items.findIndex((item) => item.id === doneItems[addedIndex].id);\n    setItems((items) => arrayMove(items, removedIndexInFullList, addedIndexInFullList));\n    setAllChangesSaved(false);\n  };\n\n  const updateItemTitle = (updatedItemTitle, id) => {\n    items.find((item) => item.id === id).itemTitle = updatedItemTitle;\n    setItems([...items]);\n    setAllChangesSaved(false);\n  };\n\n  const deleteItem = (id, e) => {\n    items.splice(\n      items.findIndex((item) => item.id === id),\n      1\n    );\n    setItems([...items]); //TODO: forstå denne\n    setAllChangesSaved(false);\n  };\n\n  const deleteAllDone = (e) => {\n    const IndexesToBeRemoved = items.reduce(function (indexList, item, index) {\n      if (item.isDone) indexList.push(index);\n      return indexList;\n    }, []);\n    while (IndexesToBeRemoved.length) {\n      items.splice(IndexesToBeRemoved.pop(), 1);\n    }\n    setItems([...items]);\n    setAllChangesSaved(false);\n  };\n\n  const handleChangeSelectedTodoList = (event) => {\n    setCurrentTodoList(event.target.value);\n  };\n\n  return (\n    <>\n      <AppHeader todoLists={todoLists} onchange={handleChangeSelectedTodoList} currentTodoList={currentTodoList} />\n      <div className={classes.root}>\n        {currentTodoList && (\n          <div className={classes.card}>\n            <form style={{ textAlign: 'center' }} onSubmit={addItem}>\n              <TextField\n                className={classes.input}\n                variant=\"outlined\"\n                fullWidth\n                required\n                placeholder=\"Legg til en oppgave\"\n                value={newItemTitle}\n                onChange={(e) => setNewItemTitle(e.currentTarget.value)}\n              />\n            </form>\n            <Container\n              onDrop={onDrop}\n              getChildPayload={(index) => items[index]}\n              dragHandleSelector=\".drag-handle\"\n              lockAxis=\"y\"\n              dropPlaceholder={{\n                animationDuration: 150,\n                showOnTop: true,\n                className: 'cards-drop-preview',\n              }}>\n              {items &&\n                items\n                  .filter(function (item) {\n                    return !item.isDone;\n                  })\n                  .map(({ id, isFavorite, itemTitle }) => {\n                    return (\n                      <Draggable key={id}>\n                        <ListItem style={{ height: '3rem', padding: '1rem' }}>\n                          <ListItemIcon>\n                            <IconButton onClick={(e) => toggleItemDone(id, e)}>\n                              <CheckCircleOutlineIcon />\n                            </IconButton>\n                          </ListItemIcon>\n                          <EditableTextField\n                            value={itemTitle}\n                            id={id}\n                            updateItemTitle={(value, id) => updateItemTitle(value, id)}\n                          />\n                          <ListItemSecondaryAction>\n                            <ListItemIcon style={{ minWidth: '0' }}>\n                              <Checkbox\n                                checked={isFavorite}\n                                icon={<FavoriteBorder />}\n                                checkedIcon={<Favorite />}\n                                onClick={(e) => toggleFavorite(id, e)}\n                                name=\"checked\"\n                              />\n                            </ListItemIcon>\n                            <ListItemIcon className=\"drag-handle\" style={{ minWidth: '0', padding: '1rem' }}>\n                              <DragHandleIcon />\n                            </ListItemIcon>\n                          </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                      </Draggable>\n                    );\n                  })}\n              <Divider />\n              <div className={classes.actionLine}>\n                <Button onClick={deleteAllDone} className={classes.deleteAllButton}>\n                  Remove finished\n                </Button>\n              </div>\n              {items &&\n                items\n                  .filter((item) => item.isDone)\n                  .map(({ id, itemTitle }) => {\n                    return (\n                      <ListItem key={id} style={{ height: '3rem' }}>\n                        <ListItemIcon>\n                          <IconButton onClick={(e) => toggleItemDone(id, e)}>\n                            <CheckCircleIcon />\n                          </IconButton>\n                        </ListItemIcon>\n                        <Typography variant=\"body1\" style={{ textDecoration: 'line-through' }}>\n                          {itemTitle}\n                        </Typography>\n                        <ListItemSecondaryAction>\n                          <ListItemIcon>\n                            <IconButton onClick={(e) => deleteItem(id, e)}>\n                              <DeleteIcon />\n                            </IconButton>\n                          </ListItemIcon>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    );\n                  })}\n            </Container>\n\n            {loading && <pre>fetching data ...</pre>}\n\n            {/*<pre>{JSON.stringify(items, undefined, 2)}</pre>*/}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default MainPage;\n","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router';\nimport Container from '@material-ui/core/Container';\nimport app from './firebase';\n\nconst UnauthorisedPage = () => {\n  useEffect(() => {\n    app.auth().signOut().then(console.log('signed out'));\n  }, []);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <h1>IKKE TILGANG, SJØ!</h1>\n      <p>Du er logget ut igjen</p>\n      <a href={'/'}>Tilbake til innlogging</a>\n    </Container>\n  );\n};\n\nexport default withRouter(UnauthorisedPage);\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Login from './Login';\nimport { AuthProvider } from './Auth';\nimport PrivateRoute from './PrivateRoute';\nimport MainPage from './MainPage';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport UnauthorisedPage from './UnauthorisedPage';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#494D5F',\n    },\n    secondary: {\n      main: '#8458B3',\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <AuthProvider>\n        <Router>\n          <PrivateRoute exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/unauthorised\" component={UnauthorisedPage} />\n        </Router>\n      </AuthProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}