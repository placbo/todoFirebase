{"version":3,"sources":["firebase.js","Auth.js","Login.js","PrivateRoute.js","api.js","EditableTextField.js","AppHeader.js","MainPage.js","DonePage.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","app","onAuthStateChanged","user","Provider","value","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","withRouter","classes","useContext","to","Container","component","maxWidth","CssBaseline","className","Button","onClick","signInWithPopup","fullWidth","variant","color","PrivateRoute","RouteComponent","rest","render","routeProps","getTodoForUser","userId","firestore","collection","doc","get","then","data","tasks","setTodoForUser","set","console","log","catch","error","EditableTextField","id","updateItemTitle","newValue","setNewValue","editMode","setEditMode","setError","errorText","setErrorText","textView","textOverflow","cursor","overflow","whiteSpace","inputView","textInput","useRef","updateTitleIfValid","length","Typography","setTimeout","current","focus","TextField","defaultValue","inputRef","required","helperText","onKeyDown","event","key","onBlur","onChange","target","root","backgroundColor","palette","primary","title","flexGrow","profileImage","borderRadius","verticalAlign","maxHeight","marginRight","AppHeader","history","useHistory","anchorEl","setAnchorEl","AppBar","position","Toolbar","push","Fragment","IconButton","menuButton","aria-controls","aria-haspopup","currentTarget","keepMounted","open","onClose","style","padding","displayName","src","photoURL","alt","email","Divider","MenuItem","signOut","listStyleType","justifyContent","card","minWidth","input","marginLeft","marginBottom","flex","inputfield","MainPage","newItemTitle","setNewItemTitle","items","setItems","waitForApi","setWaitForApi","allChangesSaved","setAllChangesSaved","finally","onSubmit","e","preventDefault","newItem","itemTitle","uuidv4","isFavorite","isDone","InputBase","placeholder","onDrop","removedIndex","addedIndex","doneItems","filter","item","removedIndexInFullList","findIndex","addedIndexInFullList","arrayMove","getChildPayload","index","dragHandleSelector","lockAxis","dropPlaceholder","animationDuration","showOnTop","map","ListItem","height","ListItemIcon","selectedItem","find","toggleItemDone","updatedItemTitle","ListItemSecondaryAction","Checkbox","checked","icon","FavoriteBorder","checkedIcon","Favorite","toggleFavorite","name","actionLine","deleteAllButton","IndexesToBeRemoved","reduce","indexList","splice","pop","textDecoration","deleteItem","createMuiTheme","main","secondary","App","ThemeProvider","exact","path","DonePage","Login","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5e3ad30.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBlc-9cBQVLLXdLxYfVpgh8I3iFALoQ7E0',\n  authDomain: 'todo-2ac34.firebaseapp.com',\n  databaseURL: 'https://todo-2ac34.firebaseio.com',\n  projectId: 'todo-2ac34',\n  storageBucket: 'todo-2ac34.appspot.com',\n  messagingSenderId: '144767486267',\n  appId: '1:144767486267:web:53c6a77d36c83e42db4f1e',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  firebase.auth().signInWithPopup(provider);\n};\n\nexport default firebase;\n","import React, { useEffect, useState } from 'react';\nimport app from './firebase.js';\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n\n  useEffect(() => {\n    if (process.env.REACT_APP_USE_MOCK === 'true') {\n      setCurrentUser({ email: 'MOCKUSER' });\n      setPending(false);\n    } else {\n      app.auth().onAuthStateChanged((user) => {\n        setCurrentUser(user);\n        setPending(false);\n      });\n    }\n  }, []);\n\n  if (pending) {\n    return <>Loading...</>;\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n      }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Redirect, withRouter } from 'react-router';\nimport { AuthContext } from './Auth.js';\nimport Button from '@material-ui/core/Button';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { signInWithGoogle } from './firebase';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Button\n          onClick={() => {\n            signInWithGoogle();\n          }}\n          fullWidth\n          variant=\"contained\"\n          className={classes.submit}\n          color=\"primary\">\n          Sign In with Google\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default withRouter(Login);\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth';\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const { currentUser } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) => (!!currentUser ? <RouteComponent {...routeProps} /> : <Redirect to={'/login'} />)}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import firebase from './firebase';\nimport 'firebase/firestore';\n\nconst collectionName = 'todoLists';\n\nexport const getTodoForUser = (userId) => {\n  if (process.env.REACT_APP_USE_MOCK === 'true') {\n    return new Promise((resolve, reject) => {\n      let MOCK_DATA = [\n        { id: '1', itemTitle: 'TODO-item 1', isFavorite: true, isDone: false },\n        { id: '2', itemTitle: 'TODO-item 2', isFavorite: false, isDone: false },\n        {\n          id: '3',\n          itemTitle: 'TODO-item 3 masse masse masse tekst her ja , ikke der, nei. ',\n          isFavorite: false,\n          isDone: false,\n        },\n        { id: '4', itemTitle: 'TODO-item 4', isFavorite: false, isDone: true },\n        { id: '5', itemTitle: 'TODO-item 5', isFavorite: false, isDone: false },\n        { id: '6', itemTitle: 'TODO-item 6', isFavorite: false, isDone: true },\n        { id: '7', itemTitle: 'TODO-item 7', isFavorite: false, isDone: false },\n      ];\n      console.log('Mock retrieving list');\n      resolve(MOCK_DATA);\n    });\n  }\n  return firebase\n    .firestore()\n    .collection(collectionName)\n    .doc(userId)\n    .get()\n    .then((doc) => {\n      return doc.data().tasks;\n    });\n};\n\nexport const setTodoForUser = (userId, tasks) => {\n  if (process.env.REACT_APP_USE_MOCK === 'true') {\n    console.log('Mock saving list');\n    return;\n  }\n  return firebase\n    .firestore()\n    .collection(collectionName)\n    .doc(userId)\n    .set({ tasks: tasks })\n    .then(() => {\n      console.log('Document successfully written!');\n    })\n    .catch((error) => {\n      console.error('Error updating/creating document: ', error);\n    });\n};\n","import React, { useRef, useState } from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\nconst EditableTextField = ({ value, id, updateItemTitle }) => {\n  const [newValue, setNewValue] = useState(value);\n  const [editMode, setEditMode] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState('');\n\n  const useStyles = makeStyles({\n    textView: {\n      width: '50%',\n      textOverflow: 'ellipsis',\n      cursor: 'pointer',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      display: editMode ? 'none' : '',\n    },\n    inputView: {\n      width: '50%',\n      display: editMode ? '' : 'none',\n    },\n  });\n\n  const classes = useStyles();\n  let textInput = useRef(null);\n\n  const turnOnEditMode = () => {\n    setTimeout(() => {\n      textInput.current.focus();\n    }, 100);\n    setEditMode(true);\n  };\n\n  const updateTitleIfValid = () => {\n    if (newValue.length > 0) {\n      setEditMode(false);\n      updateItemTitle(newValue, id);\n      setError(false);\n      setErrorText('');\n    } else {\n      setError(true);\n      setErrorText('Denne kan ikke være tom');\n    }\n  };\n\n  return (\n    <>\n      <Typography variant=\"body1\" className={classes.textView} onClick={turnOnEditMode}>\n        {newValue}\n      </Typography>\n      <TextField\n        className={classes.inputView}\n        variant=\"standard\"\n        defaultValue={newValue}\n        inputRef={textInput}\n        required\n        error={error}\n        helperText={errorText}\n        onKeyDown={(event) => {\n          event.key === 'Enter' && updateTitleIfValid();\n        }}\n        onBlur={updateTitleIfValid}\n        onChange={(event) => {\n          setNewValue(event.target.value);\n        }}\n      />\n    </>\n  );\n};\n\nexport default EditableTextField;\n","import React, { useContext, useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { AuthContext } from './Auth';\nimport app from './firebase';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { useHistory } from 'react-router';\nimport { Divider } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary,\n  },\n  title: {\n    flexGrow: 1,\n    cursor: 'pointer',\n  },\n  profileImage: {\n    borderRadius: '50%',\n    verticalAlign: 'middle',\n    maxWidth: '3rem',\n    maxHeight: '3rem',\n    marginRight: '1rem',\n  },\n}));\n\nconst AppHeader = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const { currentUser } = useContext(AuthContext);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const goToDonePage = () => {\n    history.push('/done');\n  };\n  const goToHomePage = () => {\n    history.push('/');\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const signOut = () => {\n    app.auth().signOut();\n    history.push('/');\n  };\n\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title} onClick={goToHomePage}>\n          TODOAPP\n        </Typography>\n        {!currentUser && <Button color=\"inherit\">Login</Button>}\n        {!!currentUser && (\n          <React.Fragment>\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-controls=\"simple-menu\"\n              aria-haspopup=\"true\"\n              onClick={handleClick}>\n              <MenuIcon />\n            </IconButton>\n            <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={!!anchorEl} onClose={handleClose}>\n              <div style={{ padding: '8px' }}>\n                {currentUser.displayName ? (\n                  <Typography variant=\"h6\">\n                    <img src={currentUser.photoURL} alt=\"Avatar\" className={classes.profileImage} />\n                    {currentUser.displayName}{' '}\n                  </Typography>\n                ) : (\n                  <Typography variant=\"h6\">Signed in as: {currentUser.email} </Typography>\n                )}\n              </div>\n              <Divider />\n              <MenuItem onClick={goToDonePage}>Show done items</MenuItem>\n              <MenuItem onClick={signOut}>Log out</MenuItem>\n            </Menu>\n          </React.Fragment>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default AppHeader;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from './Auth';\nimport { getTodoForUser, setTodoForUser } from './api';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItem from '@material-ui/core/ListItem';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport { Container, Draggable } from 'react-smooth-dnd';\nimport arrayMove from 'array-move';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\nimport { Divider } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport EditableTextField from './EditableTextField';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Favorite, FavoriteBorder } from '@material-ui/icons';\nimport AppHeader from './AppHeader';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n    listStyleType: 'none', //hack!!\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  card: {\n    width: '800px',\n    minWidth: '300px',\n    overflow: 'hidden',\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(1),\n    flex: 1,\n  },\n  inputfield: {},\n}));\n\nconst MainPage = () => {\n  const [newItemTitle, setNewItemTitle] = useState('');\n  const [items, setItems] = useState([]);\n  const [waitForApi, setWaitForApi] = useState(false);\n  const { currentUser } = useContext(AuthContext);\n  const [allChangesSaved, setAllChangesSaved] = useState(true);\n  const classes = useStyles();\n\n  //Trigger (get list) on logged in user\n  useEffect(() => {\n    setWaitForApi(true);\n    getTodoForUser(currentUser.email)\n      .then((items) => {\n        setItems(items);\n      })\n      .catch((error) => {\n        console.log('Failed to load todo-list', error);\n      })\n      .finally(() => {\n        setWaitForApi(false);\n      });\n  }, [currentUser.email]);\n\n  //Trigger (save list) on list change\n  useEffect(() => {\n    if (!allChangesSaved) {\n      setTodoForUser(currentUser.email, items);\n      setAllChangesSaved(true);\n    }\n  }, [items, allChangesSaved, currentUser.email]);\n\n  const addItem = (e) => {\n    e.preventDefault();\n    let newItem = {\n      itemTitle: newItemTitle,\n      id: uuidv4(),\n      isFavorite: false,\n      isDone: false,\n    };\n    setItems([...items, newItem]);\n    setNewItemTitle('');\n    setAllChangesSaved(false);\n  };\n\n  const toggleItemDone = (id, e) => {\n    e.preventDefault();\n    let selectedItem = items.find((item) => item.id === id);\n    selectedItem.isDone = !selectedItem.isDone;\n    setItems([...items]);\n    setAllChangesSaved(false);\n  };\n\n  const toggleFavorite = (id, e) => {\n    e.preventDefault();\n    let selectedItem = items.find((item) => item.id === id);\n    selectedItem.isFavorite = !selectedItem.isFavorite;\n    setItems([...items]);\n    setAllChangesSaved(false);\n  };\n\n  const onDrop = ({ removedIndex, addedIndex }) => {\n    const doneItems = items.filter(function (item) {\n      return !item.isDone;\n    });\n    const removedIndexInFullList = items.findIndex((item) => item.id === doneItems[removedIndex].id);\n    const addedIndexInFullList = items.findIndex((item) => item.id === doneItems[addedIndex].id);\n    setItems((items) => arrayMove(items, removedIndexInFullList, addedIndexInFullList));\n    setAllChangesSaved(false);\n  };\n\n  const updateItemTitle = (updatedItemTitle, id) => {\n    items.find((item) => item.id === id).itemTitle = updatedItemTitle;\n    setItems([...items]);\n    setAllChangesSaved(false);\n  };\n\n  return (\n    <>\n      <AppHeader />\n      <div className={classes.root}>\n        <div className={classes.card}>\n          <form onSubmit={addItem}>\n            <InputBase\n              className={classes.input}\n              variant=\"standard\"\n              fullWidth\n              required\n              placeholder=\"Legg til en oppgave\"\n              value={newItemTitle}\n              onChange={(e) => setNewItemTitle(e.currentTarget.value)}\n            />\n          </form>\n          <Container\n            onDrop={onDrop}\n            getChildPayload={(index) => items[index]}\n            dragHandleSelector=\".drag-handle\"\n            lockAxis=\"y\"\n            dropPlaceholder={{\n              animationDuration: 150,\n              showOnTop: true,\n              className: 'cards-drop-preview',\n            }}>\n            {items &&\n              items\n                .filter(function (item) {\n                  return !item.isDone;\n                })\n                .map(({ id, isFavorite, itemTitle }) => {\n                  return (\n                    <Draggable key={id}>\n                      <ListItem style={{ height: '3rem', padding: '0' }}>\n                        <ListItemIcon>\n                          <IconButton onClick={(e) => toggleItemDone(id, e)}>\n                            <CheckBoxOutlineBlankIcon />\n                          </IconButton>\n                        </ListItemIcon>\n                        <EditableTextField\n                          value={itemTitle}\n                          id={id}\n                          updateItemTitle={(value, id) => updateItemTitle(value, id)}\n                        />\n                        <ListItemSecondaryAction>\n                          <ListItemIcon style={{ minWidth: '0' }}>\n                            <Checkbox\n                              checked={isFavorite}\n                              icon={<FavoriteBorder />}\n                              checkedIcon={<Favorite />}\n                              onClick={(e) => toggleFavorite(id, e)}\n                              name=\"checked\"\n                            />\n                          </ListItemIcon>\n                          <ListItemIcon className=\"drag-handle\" style={{ minWidth: '0', padding: '1rem' }}>\n                            <DragHandleIcon />\n                          </ListItemIcon>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                      <Divider />\n                    </Draggable>\n                  );\n                })}\n          </Container>\n\n          {waitForApi && <pre>fetching data ...</pre>}\n\n          {/*<pre>*/}\n          {/*    {JSON.stringify(items, undefined, 4)}*/}\n          {/*</pre>*/}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MainPage;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from './Auth';\nimport { getTodoForUser, setTodoForUser } from './api';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItem from '@material-ui/core/ListItem';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { Typography } from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport AppHeader from './AppHeader';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { useHistory } from 'react-router';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n    listStyleType: 'none', //hack!!\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  card: {\n    width: '800px',\n    minWidth: '300px',\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(1),\n    flex: 1,\n  },\n  actionLine: {\n    padding: '5px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  deleteAllButton: {},\n}));\n\nconst MainPage = () => {\n  const [items, setItems] = useState([]);\n  const [waitForApi, setWaitForApi] = useState(false);\n  const { currentUser } = useContext(AuthContext);\n  const [allChangesSaved, setAllChangesSaved] = useState(true);\n  const classes = useStyles();\n  const history = useHistory();\n\n  const goToHomePage = () => {\n    history.push('/');\n  };\n\n  //Trigger (get list) on logged in user\n  useEffect(() => {\n    setWaitForApi(true);\n    getTodoForUser(currentUser.email)\n      .then((items) => {\n        setItems(items);\n      })\n      .catch((error) => {\n        console.log('Failed to load todo-list', error);\n      })\n      .finally(() => {\n        setWaitForApi(false);\n      });\n  }, [currentUser.email]);\n\n  //Trigger (save list) on list change\n  useEffect(() => {\n    if (!allChangesSaved) {\n      setTodoForUser(currentUser.email, items);\n      setAllChangesSaved(true);\n    }\n  }, [items, allChangesSaved, currentUser.email]);\n\n  const deleteItem = (id, e) => {\n    items.splice(\n      items.findIndex((item) => item.id === id),\n      1\n    );\n    setItems([...items]); //TODO: forstå denne\n    setAllChangesSaved(false);\n  };\n\n  const deleteAllDone = (e) => {\n    const IndexesToBeRemoved = items.reduce(function (indexList, item, index) {\n      if (item.isDone) indexList.push(index);\n      return indexList;\n    }, []);\n    while (IndexesToBeRemoved.length) {\n      items.splice(IndexesToBeRemoved.pop(), 1);\n    }\n    setItems([...items]);\n    setAllChangesSaved(false);\n  };\n\n  const toggleItemDone = (id, e) => {\n    e.preventDefault();\n    let selectedItem = items.find((item) => item.id === id);\n    selectedItem.isDone = !selectedItem.isDone;\n    setItems([...items]);\n    setAllChangesSaved(false);\n  };\n\n  return (\n    <>\n      <AppHeader />\n      <div className={classes.root}>\n        <div className={classes.card}>\n          <div className={classes.actionLine}>\n            <IconButton onClick={goToHomePage}>\n              <ArrowBackIcon />\n            </IconButton>\n            <Button onClick={deleteAllDone} className={classes.deleteAllButton}>\n              Delete all\n            </Button>\n          </div>\n          {items &&\n            items\n              .filter((item) => item.isDone)\n              .map(({ id, itemTitle }) => {\n                return (\n                  <ListItem key={id} style={{ height: '3rem' }}>\n                    <ListItemIcon>\n                      <IconButton onClick={(e) => toggleItemDone(id, e)}>\n                        <CheckBoxIcon />\n                      </IconButton>\n                    </ListItemIcon>\n                    <Typography variant=\"body1\" style={{ textDecoration: 'line-through' }}>\n                      {itemTitle}\n                    </Typography>\n                    <ListItemSecondaryAction>\n                      <ListItemIcon>\n                        <IconButton onClick={(e) => deleteItem(id, e)}>\n                          <DeleteIcon />\n                        </IconButton>\n                      </ListItemIcon>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                );\n              })}\n\n          {waitForApi && <pre>fetching data ...</pre>}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Login from './Login';\nimport { AuthProvider } from './Auth';\nimport PrivateRoute from './PrivateRoute';\nimport MainPage from './MainPage';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport DonePage from './DonePage';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#494D5F',\n    },\n    secondary: {\n      main: '#8458B3',\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <AuthProvider>\n        <Router>\n          <PrivateRoute exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/done\" component={DonePage} />\n          <Route exact path=\"/login\" component={Login} />\n        </Router>\n      </AuthProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}